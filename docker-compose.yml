version: '3.8'

services:
  web:
    build: .
    restart: always
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility,video,graphics
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu, utility, compute, video]
    depends_on:
      - db
      - redis
    command: >
      bash -c "./check_gpu.sh  && python3.10 manage.py makemigrations && python3.10 manage.py migrate && python3.10 manage.py runserver 0.0.0.0:8000"

  db:
    image: postgres:14-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_NAME:-videocrafter}
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery-worker1:
    build: .
    restart: always
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility,video,graphics
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu, utility, compute, video]
    depends_on:
      - db
      - redis
      - web
    command: bash -c "./check_gpu.sh && celery -A config.celery_app worker -l INFO -n worker1@%h"

  celery-worker2:
    build: .
    restart: always
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility,video,graphics
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu, utility, compute, video]
    depends_on:
      - db
      - redis
      - web
    command: bash -c "./check_gpu.sh && celery -A config.celery_app worker -l INFO -n worker2@%h"

  celery-beat:
    build: .
    restart: always
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - celery-worker1
      - celery-worker2
    command: bash -c "celery -A config.celery_app beat -l INFO"

volumes:
  postgres_data:
  redis_data: