"""
Django settings for videocrafter project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
from dotenv import load_dotenv
from datetime import timedelta

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-*gn_a!jnk_sk3tl$p3@%+up1#olf$^$n9+f9o=wue$_ly48@r5')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(os.environ.get('DEBUG', 1)))

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.core',
    # 'apps.accounts',
    'apps.processors',
    'storages'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
        'config.middleware.S3DebugMiddleware',

]


# Media files configuration
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        "DIRS": [os.path.join(BASE_DIR, "apps/core/templates")],  # Ensure this path is correct
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get('DATABASE_URL', 'sqlite:////' + str(BASE_DIR / 'db.sqlite3')),
        conn_max_age=600
    )
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_URL = '/static/'

# Directory where collectstatic will collect all static files for deployment
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Redis Configuration
REDIS_URL = os.environ.get('REDIS_URL', 'redis://localhost:6379/0')

# Cache settings
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_URL,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# Session settings
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

# Celery settings
CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = REDIS_URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE

# GPU and Video Processing Settings
ENABLE_GPU_ACCELERATION = bool(int(os.environ.get('ENABLE_GPU_ACCELERATION', 1)))
USE_MIXED_PRECISION = bool(int(os.environ.get('USE_MIXED_PRECISION', 1)))
VIDEO_PROCESSING_BATCH_SIZE = int(os.environ.get('VIDEO_PROCESSING_BATCH_SIZE', 4))
VIDEO_MAX_RESOLUTION = os.environ.get('VIDEO_MAX_RESOLUTION', '1920x1080')
VIDEO_DEFAULT_FPS = int(os.environ.get('VIDEO_DEFAULT_FPS', 30))

# Stripe Settings
STRIPE_PUBLISHABLE_KEY = os.environ.get('STRIPE_PUBLISHABLE_KEY', '')
STRIPE_SECRET_KEY = os.environ.get('STRIPE_SECRET_KEY', '')
STRIPE_WEBHOOK_SECRET = os.environ.get('STRIPE_WEBHOOK_SECRET', '')

# AWS S3 Settings
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')
AWS_REGION = os.environ.get('AWS_REGION')
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_REGION}.amazonaws.com'

# ElevenLabs TTS Settings
ELEVENLABS_API_URL = os.environ.get('ELEVENLABS_API_URL', 'https://api.elevenlabs.io/v1')
ELEVENLABS_DEFAULT_VOICE_ID = os.environ.get('ELEVENLABS_DEFAULT_VOICE_ID', '')
ELEVENLABS_DEFAULT_MODEL_ID = os.environ.get('ELEVENLABS_DEFAULT_MODEL_ID', 'eleven_monolingual_v1')

# Authentication backends
AUTHENTICATION_BACKENDS = [
    'apps.core.backends.EmailBackend',  # Custom email authentication
    # 'django.contrib.auth.backends.ModelBackend',  # Default authentication
]

# Video caching configuration
VIDEO_CACHE_TIMEOUT = int(os.environ.get('VIDEO_CACHE_TIMEOUT', 14400))  # 4 hours in seconds

# Site domain - for absolute URLs
SITE_DOMAIN = os.environ.get('SITE_DOMAIN', 'localhost:8000')


# Add additional response headers

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.office365.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', 'support@videocrafter.io')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', 'khwjhxknjycdgdtv')
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', 'support@videocrafter.io')

# Frontend URL for email links
FRONTEND_URL = os.environ.get('FRONTEND_URL', 'http://localhost:3000')
DEFAULT_FILE_STORAGE = 'config.storage_backends.MediaStorage'

OPENAI_API_KEY = os.environ.get('OPENAI_API_KEY', '')
# Security settings for CSRF and CORS
CSRF_TRUSTED_ORIGINS = [
    'https://7b86-203-101-188-13.ngrok-free.app',
    'https://8e1e-203-101-188-13.ngrok-free.app',
    'http://localhost:8000',
    'http://localhost:3000',
    f'https://{SITE_DOMAIN}',
    'https://2080-203-101-188-13.ngrok-free.app',
    'https://7dd7-203-101-188-13.ngrok-free.app',
    'https://18.171.136.117/',
    'http://18.171.136.117/',
    'http://videocrafter.io',
    'http://www.videocrafter.io',
    'https://videocrafter.io',
    'https://www.videocrafter.io'
]

# Session security
SESSION_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG

RUNPOD_API_KEY = os.environ.get('RUNPOD_API_KEY')
RUNPOD_API_URL = os.environ.get('RUNPOD_API_URL')
RUNPOD_ENDPOINT_ID = os.environ.get('RUNPOD_ENDPOINT_ID')


FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024 * 1024  # 10GB
DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024 * 1024  # 10GB